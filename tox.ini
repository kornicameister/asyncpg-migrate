[tox]
envlist = yapf,flake8,mypy
minversion = 3.11.1
skipdist = True

[testenv]
usedevelop = True
setenv = VIRTUAL_ENV={envdir}
passenv = *_proxy
          *_PROXY
whitelist_externals = bash
                      find
                      rm
                      mkdir
install_command = pip install {opts} {packages}
commands =
  find ./ -type f -name '*.pyc' -delete

[testenv:test]
description = Executes full test suite for local development
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/requirements/tests.txt
command=
    {[testenv:test_unit]:commands}
    {[testenv:test_integration]:commands}

[testenv:test_ci]
description = Executes full suite of tests in CI
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/requirements/tests.txt
passenv = CI
          CIRCLE_*
commands =
  {[testenv]commands}
  mkdir -p {toxinidir}/test-reports
  pytest \
    -vv \
    -c {toxinidir}/pytest.ini \
    --cov-report html \
    --cov-report xml \
    --cov-report annotate \
    --cov=asyncpg_migrate \
    --junitxml={toxinidir}/test-reports/junit.xml \
    tests
  coverage xml

[testenv:test_unit]
description = Executes unit tests
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/requirements/tests.txt
commands =
  {[testenv]commands}
  pytest \
    -c {toxinidir}/pytest.ini \
    tests/unit

[testenv:test_integration]
description = Executes integrations tests
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/requirements/tests.txt
whitelist_externals = find
                      docker
                      sleep
setenv =
    POSTGRES_USER=test
    POSTGRES_PASSWORD=test
    POSTGRES_DB=test
    POSTGRES_PORT=5432
    POSTGRES_HOST=0.0.0.0
passenv = *_proxy
          *_PROXY
          DOCKER_*
          CIRCLE_*
commands_pre =
  docker network ls
  docker run \
    -d \
    --name asyncpg_migrate_test \
    -e POSTGRES_USER={env:POSTGRES_USER} \
    -e POSTGRES_PASSWORD={env:POSTGRES_PASSWORD} \
    -e POSTGRES_DB={env:POSTGRES_DB} \
    -p {env:POSTGRES_PORT}:5432 \
    postgres:alpine
  sleep 5
  docker ps
commands =
  {[testenv]commands}
  pytest \
    -c {toxinidir}/pytest.ini \
    tests/integration
commands_post =
  docker stop asyncpg_migrate_test
  docker rm asyncpg_migrate_test

[testenv:yapf]
description = Checks code formatting with yapf
skip_install = True
usedevelop = False
deps =
  -r{toxinidir}/requirements/yapf.txt
commands =
  {[testenv]commands}
  yapf --diff --recursive {toxinidir}/asyncpg_migrate {toxinidir}/tests {toxinidir}/setup.py

[testenv:flake8]
description = Validates codebase with flake
skip_install = True
usedevelop = False
deps =
  -r{toxinidir}/requirements/flake8.txt
commands =
  {[testenv]commands}
  flake8 --config {toxinidir}/.flake8 {toxinidir}/asyncpg_migrate {toxinidir}/tests {toxinidir}/setup.py

[testenv:mypy]
description = Validates codebase with flake
skip_install = True
usedevelop = False
deps =
  -r{toxinidir}/requirements/mypy.txt
commands =
  {[testenv]commands}
  mypy --config-file {toxinidir}/mypy.ini {toxinidir}/asyncpg_migrate {toxinidir}/tests {toxinidir}/setup.py

[testenv:venv]
commands = {posargs}
