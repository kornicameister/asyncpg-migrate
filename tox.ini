[tox]
envlist = yapf,flake8,mypy
minversion = 3.11.1
skipdist = True

[testenv]
usedevelop = True
setenv = VIRTUAL_ENV={envdir}
passenv = *_proxy
          *_PROXY
whitelist_externals = bash
                      find
                      rm
install_command = pip install {opts} {packages}
commands =
  find ./ -type f -name '*.pyc' -delete

[testenv:test]
description = Executes tests
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/requirements/tests.txt
command=
    {[testenv:test_unit]:commands}
    {[testenv:test_integration]:commands}

[testenv:test_unit]
description = Executes unit tests
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/requirements/tests.txt
commands =
  {[testenv]commands}
  pytest --cov=asyncpg_migrate -lv tests/unit

[testenv:test_integration]
description = Executes integrations tests
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/requirements/tests.txt
whitelist_externals = find
                      docker
commands_pre =
  docker version
  docker run -d --name asyncpg_migrate_test -e POSTGRES_USER=root -e POSTGRES_PASSWORD=root -e POSTGRES_DB=asyncpg_migrate -p 5432:5432 postgres:alpine
commands_post =
  docker stop asyncpg_migrate_test
  docker rm asyncpg_migrate_test
commands =
  {[testenv]commands}
  pytest --cov=asyncpg_migrate -lv tests/integration

[testenv:yapf]
description = Checks code formatting with yapf
skip_install = True
usedevelop = False
deps =
  -r{toxinidir}/requirements/yapf.txt
commands =
  {[testenv]commands}
  yapf --diff --recursive {toxinidir}/asyncpg_migrate {toxinidir}/tests {toxinidir}/setup.py

[testenv:flake8]
description = Validates codebase with flake
skip_install = True
usedevelop = False
deps =
  -r{toxinidir}/requirements/flake8.txt
commands =
  {[testenv]commands}
  flake8 --config {toxinidir}/.flake8 {toxinidir}/asyncpg_migrate {toxinidir}/tests {toxinidir}/setup.py

[testenv:mypy]
description = Validates codebase with flake
skip_install = True
usedevelop = False
deps =
  -r{toxinidir}/requirements/mypy.txt
commands =
  {[testenv]commands}
  mypy --config-file {toxinidir}/mypy.ini {toxinidir}/asyncpg_migrate {toxinidir}/tests {toxinidir}/setup.py

[testenv:venv]
commands = {posargs}
