---
x-prepare: &install_prepare
  run:
    name: "Install/Upgrade tox & pip"
    command: |
      sudo chown -R circleci:circleci /usr/local/bin
      sudo chown -R circleci:circleci /usr/local/lib/python$(python --version | sed -e 's/Python\s//g' | awk -F'.' '{print $1"."$2}')/site-packages
      pip install pip tox --upgrade
x-test-steps: &test_steps
  working_directory: ~/app
  steps:
    - checkout
    - <<: *install_prepare
    - run:
        name: Mighty test run
        command: tox -e test_ci
    - store_test_results:
        path: test-reports
    - store_artifacts:
        path: test-reports
    - store_artifacts:
        path: htmlcov
    - codecov/upload:
        file: coverage.xml
        when: on_success
x-docker-env: &postgres_env
  environment:
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test
    POSTGRES_DB: test

version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
jobs:
  verify:
    working_directory: ~/app
    docker:
      - image: circleci/python:3.7.4
    steps:
      - checkout
      - <<: *install_prepare
      - run:
          name: Check formatting
          command: tox -e yapf
      - run:
          name: Check mypy
          command: tox -e mypy
      - run:
          name: Check flake
          command: tox -e flake8
      - store_artifacts:
          path: typingcov
  test_36:
    <<: *test_steps
    docker:
      - image: circleci/python:3.6.8
      - image: postgres:alpine
        <<: *postgres_env
  test_373:
    <<: *test_steps
    docker:
      - image: circleci/python:3.7.3
      - image: postgres:alpine
        <<: *postgres_env
  test_374:
    <<: *test_steps
    docker:
      - image: circleci/python:3.7.4
      - image: postgres:alpine
        <<: *postgres_env
  test_install:
    docker:
      - image: circleci/python:3.7.4
    working_directory: ~/app
    steps:
      - checkout
      - <<: *install_prepare
      - run:
          name: setup.py install
          command: python setup.py install

  deploy:
    docker:
      - image: circleci/python:3.7.4
    working_directory: ~/app
    steps:
      - checkout
      - <<: *install_prepare
      - run: pip install twine
      - run: python setup.py twine --commit --rebuild --egg=all --sdist=all

workflows:
  version: 2
  apg-m-release:
    jobs:
      - verify:
          filters: &release_filters
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
          requires:
            - test_36
            - test_374
      - test_36:
          filters:
            <<: *release_filters
      - test_374:
          filters:
            <<: *release_filters
      - deploy:
          filters:
            <<: *release_filters
          requires:
            - verify
  apg-m-verify:
    jobs:
      - verify
      - test_36:
          requires:
            - verify
      - test_373:
          requires:
            - verify
      - test_374:
          requires:
            - verify
      - test_install:
          requires:
            - verify
            - test_374 # only require latest python check to pass
